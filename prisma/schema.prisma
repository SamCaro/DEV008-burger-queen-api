// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  price          Float
  image          String? //?---> La img es opcional Puede contener una ruta o URL que apunta a la imagen del producto
  type           String? // Categoria del producto
  createdAt      DateTime         @default(now())
  updateAt       DateTime         @updatedAt //  Registra la fecha y hora de la última actualización del registro del producto.
  isActive       Boolean          @default(true)
  OrdersProducts OrdersProducts[]
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  Role      Role
  Orders    Orders[]
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  isActive  Boolean  @default(true)
}

enum Role {
  Admin
  Waiter
  Chef
}

model Orders {
  id        Int              @id @default(autoincrement())
  UserId    Int
  client    String
  Products  OrdersProducts[]
  Users     Users            @relation(fields: [UserId], references: [id])
  isActive  Boolean          @default(true)
  createdAt DateTime         @default(now())
  updateAt  DateTime         @updatedAt
  status    String
}

enum OrdersStatus {
  pending
  canceled
  delivering
  delivered
}

model OrdersProducts {
  id        Int      @id @default(autoincrement())
  quantity  Int
  OrderId   Int
  ProductId Int
  Product   Products @relation(fields: [ProductId], references: [id])
  Order     Orders   @relation(fields: [OrderId], references: [id])
  isActive  Boolean  @default(true)
}
